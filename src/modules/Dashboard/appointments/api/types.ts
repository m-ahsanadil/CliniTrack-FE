
export interface AppointmentLocation {
    facilityId: string;
    facilityName: string;
    roomNumber: string;
    address: string;
}

export interface AppointmentRequest {
    _id?: string
    appointmentNumber: string; // WILL GENERATED BY THE FRONTEND
    patientId: string;  // WILL GET FROM THE GET PROVIDER 
    providerId: string;  // WILL GET FROM THE GET PATIENT
    departmentName: string;
    appointmentDate: string;
    startTime: string;
    endTime: string;
    duration: number;
    timeZone: string;
    type: string;
    priority: string;
    status: string;
    location: AppointmentLocation;
    reasonForVisit: string;
    symptoms: string[];
    notes: string;
    createdBy: string;
    updatedBy: string;
}

export interface AppointmentResponse {
    success: true;
    message: string;
}

export interface AppointmentErrorResponse {
    success: false;
    message: string;
    data: string;
}

// Combined response type
export type AppointmentApiResponse = AppointmentResponse | AppointmentErrorResponse;

export interface Appointment {
    _id: string;
    appointmentNumber: string;
    location: {
        facilityId: string;
        facilityName: string;
        roomNumber: string;
        address: string;
    }
    patientId: {
        _id: string;
        fullName: string;
    };
    patientName: string;
    providerId: {
        _id: string;
        name: string;
    };
    providerName: string;
    departmentName: string;
    appointmentDate: string;
    startTime: string;
    endTime: string;
    duration: number;
    timeZone: string;
    type: string;
    priority: string;
    status: string;
    reasonForVisit: string;
    symptoms: string[];
    notes: string;
    createdBy: string;
    updatedBy: string;
    remindersSent: any[];
    createdAt: string;
    updatedAt: string;
    __v: number;
}

export interface AppointmentGetResponse {
    success: true;
    count: number;
    data: Appointment[]
}

export interface AppointmentGetErrorResponse {
    success: false;
    message: string;
    data: string;
}

// Combined response type
export type AppointmentGetApiResponse = AppointmentGetResponse | AppointmentGetErrorResponse;

export interface AppointmentPostResponse {
    success: true;
    message: string;
    data: {
        _id: string;
        appointmentNumber: string;
        patientId: string;
        patientName: string;
        providerId: string;
        providerName: string;
        departmentName: string;
        appointmentDate: string;
        startTime: string;
        endTime: string;
        duration: number;
        timeZone: string;
        type: string;
        priority: string;
        status: string;
        location: {
            facilityId: string;
            facilityName: string;
            roomNumber: string;
            address: string;
        };
        reasonForVisit: string;
        symptoms: string[];
        notes: string;
        createdBy: string;
        updatedBy: string;
        remindersSent: any[];
        createdAt: string;
        updatedAt: string;
        __v: number;
    }
}

export interface AppointmentPostErrorResponse {
    success: false;
    message: string;
    data: string;
}

// Combined response type
export type AppointmentPostApiResponse = AppointmentPostResponse | AppointmentPostErrorResponse;

interface Location {
    facilityId: string;
    facilityName: string;
    roomNumber: string;
    address: string;
}
interface Location {
    facilityId: string;
    facilityName: string;
    roomNumber: string;
    address: string;
}

export interface AppointmentData {
    location: Location;
    _id: string;
    appointmentNumber: string;
    patientId: string;
    patientName: string;
    providerId: string;
    providerName: string;
    departmentName: string;
    appointmentDate: string; // ISO date string
    startTime: string;
    endTime: string;
    duration: number;
    timeZone: string;
    type: string;
    priority: string;
    status: string;
    reasonForVisit: string;
    symptoms: string[];
    notes: string;
    createdBy: string;
    updatedBy: string;
    remindersSent: any[]; // Array type not specified in the example
    createdAt: string; // ISO date string
    updatedAt: string; // ISO date string
    __v: number;
}

export interface AppointmentUpdateResponse {
    success: boolean;
    message: string;
    data: AppointmentData;
}


// DELETE Appointment
export interface AppointmentDeleteResponse {
    success: boolean;
    message: string;
}

export interface AppointmentDeleteErrorResponse {
    success: false;
    message: string;
    data?: string;
}

export type AppointmentDeleteApiResponse = AppointmentDeleteResponse | AppointmentDeleteErrorResponse;